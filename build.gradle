version "1.0"

buildscript {

    ext {
        kotlin_version = '1.3.11'
        rome_version = "1.11.1"
        ktor_version = "1.0.1"
    }

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
    }
}

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'kotlin'
apply plugin: "application"

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:+"

    compile "com.squareup.okhttp3:okhttp:3.12.0"

    compile "com.rometools:rome:$rome_version"
    compile "com.rometools:rome-modules:$rome_version"

    compile "com.google.apis:google-api-services-youtube:v3-rev205-1.25.0"
    compile "com.google.api-client:google-api-client-jackson2:1.25.0"

    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "io.ktor:ktor-client-apache:$ktor_version"

    compile "com.yandex.android:disk-restapi-sdk:1.03"

    testCompile 'io.kotlintest:kotlintest:2.0.7'

    ktlint "com.github.shyiko:ktlint:0.29.0"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args = ["src/**/*.kt"]
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args = ["-F", "src/**/*.kt"]
}

compileKotlin {
    kotlinOptions {
        allWarningsAsErrors = true
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

mainClassName = "adeln.MainKt"

jar {
    from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }

    manifest {
        final attrs = [
            'Implementation-Title'  : 'Foobar',
            'Implementation-Version': version,
            'Built-By'              : System.getProperty('user.name'),
            'Built-Date'            : new Date(),
            'Built-JDK'             : System.getProperty('java.version'),
            'Main-Class'            : mainClassName,
        ]
        attributes attrs
    }
}

task stage(dependsOn: "jar")
